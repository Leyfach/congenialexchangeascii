apiVersion: v1
kind: ConfigMap
metadata:
  name: exchange-config
  namespace: crypto-exchange
data:
  NODE_ENV: "production"
  PORT: "3000"
  DATABASE_URL: "postgres://postgres:secure_password@postgres-service:5432/crypto_exchange"
  REDIS_URL: "redis://:redis_password@redis-service:6379"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: crypto-exchange
data:
  POSTGRES_DB: "crypto_exchange"
  POSTGRES_USER: "postgres"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: crypto-exchange
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;

        location / {
            try_files $uri $uri/ /index.html;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        location /api {
            proxy_pass http://backend-service:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /ws {
            proxy_pass http://backend-service:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        error_page 404 /index.html;
    }